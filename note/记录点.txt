web  粒子动画
	https://blog.csdn.net/u011225629/article/details/50536590
	http://web.jobbole.com/87602/

css 中 zoom和transform:scale的区别
	https://cloud.tencent.com/developer/article/1185764
	
nodejs 上传文件测试

js监听资源加载完成

项目文档生成

setTimeout 第一个参数为字符串时的内部实现原理
闭包在setTimeout中的作用
setTimeout的几种参数传递方式
	function nodeReassignmentInt(me){
		return function(){
	    	nodeReassignment(me)
		} 
	}
	function nodeReassignment(a){
		console.log(a)
	}
	function IntervalNode(me){
		var obj = me;
		setTimeout(nodeReassignmentInt(obj),1000)
	}
	IntervalNode(1);
	
切换页面导致计时器停止，JS暂停

pc与手机的摄像机起调  区别  复用  人脸检测

webim项目下的xml数据传输解析以及生成xml数据格式传输  表情消息发送  带样式文字发送  收到语音图片视频的处理方法  防止非法字符

直播功能  rtsp与rtmp的插件

tagsdesign项目下相关知识点：
ctrl+c  ctrl+v ctrl+z 等组合键的监听与功能
监听鼠标位置
获取分辨率
绘制canvas标尺  及改变标尺的单位与开始位置
缩放功能（根据分辨率元素的缩放  标尺的缩放）
二维码的生成  二维码生成图片  中文支持
像素单位根据分辨率转为毫米
元素随输入框改变 
编辑器
    滚动缩放，拖拽，标尺

ht.js项目下的知识点
    cesium地图实例
    vue 下路由的使用
    父子组件传值问题
    vue keep-live下iframe刷新问题
    地图组件
    three.js 模型相关问题
    关于页面加载顺序

css下import可以覆盖   css下权重的计算方法  权重超出也不会覆盖id的样式

vue 刷新的方法  可以通过改变key值来实现刷新

element-ui tree筛选之后全选会选中父节点下所有子节点的问题
可以通过再嵌套一层数组来存储选中值的方法处理

前端：video.js+flv.js能够支持mpeg(mp4、mp3)、flv、m3u8等常见的视频格式。可以简单封装成一个组件。最好是根据视频格式动态加载对应的类库
服务端：nginx或者node-media-server（基于ffmpeg）能够支持webm、ogg、wav、rtmp等绝大部分视频格式（目前也已经在金华应用）。

另外，前端有类库ffmpeg.js、videoconverter.js能够支持动态转换视频格式，可以尝试下 。
如果要兼容ie，尽量直接让美工支持出mp4视频格式而不是webm，前端播放不了的视频还是放到服务端做转换会更合适。这么久了，就没人做到在ie下直接播放webm、ogg，自己动手做一个视频播放器还是有很大工作量的，而服务端已经有现成的工具了。

ssms操作数据库
vue 可以通过key值的改变强制刷新
vue 模板相同的情况下切换tabs不刷新组件  可以通过设置key值来处理
后端java的学习 node.js 与nginx
后期技术切换为vue3.0  go  deno
地图组件的学习
地图导航功能的实现
前端核心代码保护
ts的学习
v-ref的作用与使用场景
手机端图片预览组件学习
video组件的实现  接入video.js 与flv.js

1.onkeyup  是发生在数值改变后事件   
  所以在这个时候再进行value=value.replace(/[^\d]+/g,'')这种改变是无效的
  
2.监听插槽[https://segmentfault.com/a/1190000040420267]
  使用的是HTML5的新API - MutationObserver，用来监视DOM变化，异步执行。
  不过IE只支持11+
  
beforeDestroy() {
  this.resizeObserver && this.resizeObserver.unobserve(this.$refs.searchForm.$el)
},
try {
  this.resizeObserver = new ResizeObserver(() => {
	
  })
  this.resizeObserver.observe(this.$refs.searchForm.$el)
} catch (e) {
  console.error('当前浏览器（版本）不兼容ResizeObserver')
}

this.$refs.system && this.$refs.system.resizeMap()
this.$refs.energy && this.$refs.energy.resizeMap()

小程序方面  可以看看支付流程和静默登录
技术方面要加强ts  vue3.0  和node





